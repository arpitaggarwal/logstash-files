input {
file {
     path => "/Users/ArpitAggarwal/access.log"
     start_position => beginning
     type=> "nginx_log"
  }
beats {
     type => beat
     port => 5000
  }
}

filter {
 if [type] == "nginx_log" {
   grok {
     patterns_dir => "/Users/ArpitAggarwal/logstash/patterns"
     match => { "message" => "%{NGINX_ACCESS}" }
   }
   date {
     match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
     timezone =>"Asia/Kolkata"
     target => "@timestamp"
     add_field => { "debug" => "%{timestamp}"}
   }
   geoip {
    source => "visitor_ip"
  }
} else if [type] == "static_tomcat_log"  and  "com.test.controller.log.LogController" in [message] {
   grok {
     patterns_dir => "/Users/ArpitAggarwal/logstash/patterns"
     match => { "message" => "%{SERVERLOG}" }
   }
   mutate {
     gsub => [
         "tomcat_message",".*Analytics \[","",
         "tomcat_message","\[","",
         "tomcat_message","\]","",
         "tomcat_message","device\=Device",""
       ]
     add_tag => [ "Server_LOG" ]
   }
   date {
        match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
        timezone =>"Asia/Kolkata"
        target => "@timestamp"
        add_field => { "debug" => "%{timestamp}"}
   }
   mutate {
       remove_field => [ "timestamp" ]
       convert => {
         "took_millis" => "integer"
         "total_shards" => "integer"
         "shard" => "integer"
       }
   }
   kv {
      source => "tomcat_message"
      field_split => ","
      trimkey => "\"\ \(\)"
      remove_field => [ "releaseType" ]
   }
 }else{
    drop { }
 }

if "_grokparsefailure" in [tags] {
  drop { }
}
}

output {
# stdout {codec => rubydebug}
# if "_grokparsefailure" in [tags] {
     elasticsearch {
        hosts => ["localhost:9200"]
        index => "logstash-%{type}-%{+YYYY.MM.dd}"
     }
# }
}
